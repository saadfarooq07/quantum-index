version: '3.8'

services:
  etcd:
    container_name: quantum-index-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "12379:2379"
      - "12380:2380"

  minio:
    container_name: quantum-index-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_BUCKET: a-bucket
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    entrypoint: sh
    command: -c 'mkdir -p /minio_data/a-bucket && minio server /minio_data --console-address ":9001"'
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "9000:9000"
      - "9001:9001"

  vector-store:
    container_name: quantum-index-milvus
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "standalone"]
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      etcd:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/health"]
      interval: 30s
      timeout: 20s
      retries: 3

  q0rtex:
    container_name: quantum-index-q0rtex
    image: shloth/q0rtex:latest
    environment:
      - METAL_ENABLED=true
      - M3_OPTIMIZATION=true
    volumes:
      - /tmp/metal:/var/metal  # Metal shader cache
      - ./services/q0rtex/config:/etc/cortex
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/cortex:/tmp/cortex
    ports:
      - "8000:8000"  # Q0rtex API
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/ready"]
      interval: 30s
      timeout: 20s
      retries: 3

  cortex:
    container_name: quantum-index-cortex
    build:
      context: .
      dockerfile: services/cortex/Dockerfile
    environment:
      - METAL_DEVICE=/dev/metal0
      - QUANTUM_OPTIMIZATION=true
      - PYTORCH_ENABLE_MPS_FALLBACK=1
      - METAL_DEVICE_WRAPPER_TYPE=1
    volumes:
      - /tmp/metal:/var/metal
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/models:/root/.cache/huggingface
    ports:
      - "8001:8001"  # Cortex API
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G
    depends_on:
      - q0rtex
      - vector-store
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 20s
      retries: 3

networks:
  default:
    name: quantum-index-network

volumes:
  milvus:
    driver: local
